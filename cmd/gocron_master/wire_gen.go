// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/magicLian/gocron/cmd/gocron_master/backgroundSvc"
	"github.com/magicLian/gocron/pkg/api"
	"github.com/magicLian/gocron/pkg/api/middleware"
	"github.com/magicLian/gocron/pkg/services/cronService"
	"github.com/magicLian/gocron/pkg/services/nodeManager"
	"github.com/magicLian/gocron/pkg/services/sqlstore"
	"github.com/magicLian/gocron/pkg/setting"
)

// Injectors from wire.go:

func InitGoCronMasterWire(cmd *setting.CommandLineArgs) (*GoCronMasterServer, error) {
	cfg, err := setting.ProvideSettingCfg(cmd)
	if err != nil {
		return nil, err
	}
	middleWare := middleware.ProvideMiddleWare(cfg)
	httpServer := api.ProvideHttpServer(cfg, middleWare)
	cronService := cronservice.ProvideCronService(cfg)
	backgroundServiceRegistry := backgroundSvc.ProviceBackgroupServiceRegistry(httpServer, cronService)
	goCronMasterServer := NewGoCronMasterServer(cfg, backgroundServiceRegistry)
	return goCronMasterServer, nil
}

// wire.go:

var wireSet = wire.NewSet(
	NewGoCronMasterServer, backgroundSvc.ProviceBackgroupServiceRegistry, setting.ProvideSettingCfg, sqlstore.ProvideSqlStore, api.ProvideHttpServer, middleware.ProvideMiddleWare, nodemanager.ProvideNodeService, cronservice.ProvideCronService,
)
